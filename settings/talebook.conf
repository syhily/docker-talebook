upstream tornado {
    server 127.0.0.1:8000;
}

upstream nuxtjs {
    server 127.0.0.1:9000;
}

map $http_x_scheme $req_scheme {
    default $http_x_scheme;
    ""      $scheme;
}

# Disable bots
map $http_user_agent $limit_bots {
    default 0;
    ~*(google|bing|yandex|msnbot) 1;
    ~*(AltaVista|Googlebot|Slurp|BlackWidow|Bot|ChinaClaw|Custo|DISCo|Download|Demon|eCatch|EirGrabber|EmailSiphon|EmailWolf|SuperHTTP|Surfbot|WebWhacker) 1;
    ~*(Express|WebPictures|ExtractorPro|EyeNetIE|FlashGet|GetRight|GetWeb!|Go!Zilla|Go-Ahead-Got-It|GrabNet|Grafula|HMView|Go!Zilla|Go-Ahead-Got-It) 1;
    ~*(rafula|HMView|HTTrack|Stripper|Sucker|Indy|InterGET|Ninja|JetCar|Spider|larbin|LeechFTP|Downloader|tool|Navroad|NearSite|NetAnts|tAkeOut|WWWOFFLE) 1;
    ~*(GrabNet|NetSpider|Vampire|NetZIP|Octopus|Offline|PageGrabber|Foto|pavuk|pcBrowser|RealDownload|ReGet|SiteSnagger|SmartDownload|SuperBot|WebSpider) 1;
    ~*(Teleport|VoidEYE|Collector|WebAuto|WebCopier|WebFetch|WebGo|WebLeacher|WebReaper|WebSauger|eXtractor|Quester|WebStripper|WebZIP|Wget|Widow|Zeus) 1;
    ~*(Twengabot|htmlparser|libwww|Python|perl|urllib|scan|Curl|email|PycURL|Pyth|PyQ|WebCollector|WebCopy|webcraw) 1;
 }

server {
    listen               80;
    listen               443 ssl http2;
    server_name          _;
    ssl_certificate      /data/books/ssl/ssl.crt;
    ssl_certificate_key  /data/books/ssl/ssl.key;
    index                index.html;
    client_max_body_size 0;
    root                 /var/www/talebook/app/dist/;
    access_log           /data/log/nginx/talebook-access.log;
    error_log            /data/log/nginx/talebook-error.log;
    add_header           Access-Control-Allow-Origin *;

    # Disable the talebook register
    location = /api/user/sign_up {
        deny all;
    }

    location ~ ^/(api|get|read|opds|auth)/ {
        expires -1s;
        if ( $request_uri ~* ^/get/ ) {
            expires max;
        }
        proxy_pass       http://tornado;
        proxy_redirect   off;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Scheme $req_scheme;
    }

    location / {
        if ($limit_bots = 1) {
            return 403;
        }
        proxy_pass       http://nuxtjs;
        proxy_redirect   off;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Scheme $req_scheme;
    }

    try_files $uri $uri/ /index.html;
}
